*eregi*

(PHP 4, PHP 5)

eregi â€” Case insensitive regular expression match

Warning

This function was DEPRECATED in PHP 5.3.0, and REMOVED in PHP 7.0.0.

Alternatives to this function include:

 * |preg_match| (with the i (PCRE_CASELESS) modifier)

===============================================================================
[ Description ]

  eregi ( string $pattern , string $string [, array &$regs ] ) : int~

This function is identical to |ereg| except that it ignores case distinction
when matching alphabetic characters.

===============================================================================
[ Parameters ]

{pattern}

  Case insensitive regular expression.

{string}

  The input string.

{regs}

  If matches are found for parenthesized substrings of {pattern} and the
  function is called with the third argument {regs}, the matches will be stored
  in the elements of the array {regs}.

  $regs[1] will contain the substring which starts at the first left
  parenthesis; $regs[2] will contain the substring starting at the second, and
  so on. $regs[0] will contain a copy of the complete string matched.

===============================================================================
[ Return Values ]

Returns the length of the matched string if a match for {pattern} was found in
{string}, or FALSE if no matches were found or an error occurred.

If the optional parameter {regs} was not passed or the length of the matched
string is 0, this function returns 1.

===============================================================================
[ Examples ]

Example #1 eregi() example

<?php >
  $string = 'XYZ';
  if (eregi('z', $string)) {
      echo "'$string' contains a 'z' or 'Z'!";
  }
<?>

===============================================================================
[ See Also ]

 * |ereg| - Regular expression match
 * |ereg_replace| - Replace regular expression
 * |eregi_replace| - Replace regular expression case insensitive
 * |preg_match| - Perform a regular expression match
 * |stripos| - Find the position of the first occurrence of a case-insensitive
  substring in a string
 * |stristr| - Case-insensitive strstr
 * |quotemeta| - Quote meta characters


vim:ft=help: