*is_iterable*

(PHP 7 >= 7.1.0)

is_iterable â€” Verify that the contents of a variable is an iterable value

===============================================================================
[ Description ]

  is_iterable ( mixed $var ) : bool~

Verify that the contents of a variable is accepted by the iterable pseudo-type,
i.e. that it is either an array or an object implementing Traversable

===============================================================================
[ Parameters ]

{var}

  The value to check

===============================================================================
[ Return Values ]

Returns TRUE if {var} is iterable, FALSE otherwise.

===============================================================================
[ Examples ]

Example #1 is_iterable() examples

<?php >

  var_dump(is_iterable([1, 2, 3]));  // bool(true)
  var_dump(is_iterable(new ArrayIterator([1, 2, 3])));  // bool(true)
  var_dump(is_iterable((function () { yield 1; })()));  // bool(true)
  var_dump(is_iterable(1));  // bool(false)
  var_dump(is_iterable(new stdClass()));  // bool(false)

<?>

===============================================================================
[ See Also ]

 * |is_array| - Finds whether a variable is an array


vim:ft=help: