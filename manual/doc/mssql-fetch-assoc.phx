*mssql_fetch_assoc*

(PHP 4 >= 4.2.0, PHP 5, PECL odbtp >= 1.1.1)

mssql_fetch_assoc â€” Returns an associative array of the current row in the
result

Warning

This function was REMOVED in PHP 7.0.0.

Alternatives to this function include:

 * PDOStatement::fetch()
 * |sqlsrv_fetch_array|
 * |odbc_fetch_array|

===============================================================================
[ Description ]

  mssql_fetch_assoc ( resource $result_id ) : array~

Returns an associative array that corresponds to the fetched row and moves the
internal data pointer ahead. mssql_fetch_assoc() is equivalent to calling 
|mssql_fetch_array| with MSSQL_ASSOC for the optional second parameter.

===============================================================================
[ Parameters ]

{result_id}

  The result resource that is being evaluated. This result comes from a call to
  |mssql_query|.

===============================================================================
[ Return Values ]

Returns an associative array that corresponds to the fetched row, or FALSE if
there are no more rows.

===============================================================================
[ Examples ]

Example #1 mssql_fetch_assoc() example

<?php >
  // Send a select query to MSSQL
  $query = mssql_query('SELECT [username], [name] FROM [php].[dbo].[userlist]');

  // Check if there were any records
  if (!mssql_num_rows($query)) {
      echo 'No records found';
  }
  else
  {
      // Print a nice list of users in the format of:
      // * name (username)

      echo '<ul>';

      while ($row = mssql_fetch_assoc($query)) {
          echo '<li>' . $row['name'] . ' (' . $row['username'] . ')</li>';
      }

      echo '</ul>';
  }

  // Free the query result
  mssql_free_result($query);
<?>


vim:ft=help: