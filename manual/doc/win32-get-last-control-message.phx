*win32_get_last_control_message*

(PECL win32service >=0.1.0)

win32_get_last_control_message â€” Returns the last control message that was sent
to this service

===============================================================================
[ Description ]

  win32_get_last_control_message ( void ) : int~

Returns the control code that was last sent to this service process. When
running as a service you should periodically check this to determine if your
service needs to stop running.

Caution

Since version 0.2.0, this function work only in "cli" SAPI. On other SAPI this
function is disabled.

===============================================================================
[ Return Values ]

Returns a control constant which will be one of the Win32Service Service
Control Message Constants: WIN32_SERVICE_CONTROL_CONTINUE,
WIN32_SERVICE_CONTROL_INTERROGATE, WIN32_SERVICE_CONTROL_PAUSE,
WIN32_SERVICE_CONTROL_PRESHUTDOWN, WIN32_SERVICE_CONTROL_SHUTDOWN,
WIN32_SERVICE_CONTROL_STOP.

===============================================================================
[ Errors/Exceptions ]

If SAPI is not "cli", this function emits an E_ERROR level error.

===============================================================================
[ Changelog ]

Version                 Description
0.2.0   This function works only in the "cli" SAPI.

===============================================================================
[ See Also ]

 * |win32_start_service_ctrl_dispatcher| - Registers the script with the SCM,
  so that it can act as the service with the given name
 * |win32_set_service_status| - Update the service status
 * |win32_set_service_exit_mode| - Define or return the exit mode for the
  current running service
 * |win32_set_service_exit_code| - Define or return the exit code for the
  current running service
 * Win32Service Service Control Message Constants


vim:ft=help: