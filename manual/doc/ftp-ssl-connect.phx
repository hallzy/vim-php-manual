*ftp_ssl_connect*

(PHP 4 >= 4.3.0, PHP 5, PHP 7)

ftp_ssl_connect â€” Opens a Secure SSL-FTP connection

===============================================================================
[ Description ]

  ftp_ssl_connect ( string $host [, int $port = 21 [, int $timeout = 90 ]] ) :~
  resource~

ftp_ssl_connect() opens an explicit SSL-FTP connection to the specified {host}.
That implies that ftp_ssl_connect() will succeed even if the server is not
configured for SSL-FTP, or its certificate is invalid. Only when |ftp_login| is
called, the client will send the appropriate AUTH FTP command, so |ftp_login|
will fail in the mentioned cases.

  Note: Why this function may not exist

  ftp_ssl_connect() is only available if both the ftp module and the OpenSSL
  support is built statically into php, this means that on Windows this
  function will be undefined in the official PHP builds. To make this function
  available on Windows you must compile your own PHP binaries.

  Note:

  ftp_ssl_connect() is not intended for use with sFTP. To use sFTP with PHP,
  please see |ssh2_sftp|.

===============================================================================
[ Parameters ]

{host}

  The FTP server address. This parameter shouldn't have any trailing slashes
  and shouldn't be prefixed with ftp://.

{port}

  This parameter specifies an alternate port to connect to. If it is omitted or
  set to zero, then the default FTP port, 21, will be used.

{timeout}

  This parameter specifies the timeout for all subsequent network operations.
  If omitted, the default value is 90 seconds. The timeout can be changed and
  queried at any time with |ftp_set_option| and |ftp_get_option|.

===============================================================================
[ Return Values ]

Returns a SSL-FTP stream on success or FALSE on error.

===============================================================================
[ Changelog ]

Version                               Description
5.2.2   The function was changed to return FALSE when it can't use an SSL
        connection, instead of falling back to a non-SSL one as previously.

===============================================================================
[ Examples ]

Example #1 ftp_ssl_connect() example

<?php >

  // set up basic ssl connection
  $conn_id = ftp_ssl_connect($ftp_server);

  // login with username and password
  $login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);

  if (!$login_result) {
      // PHP will already have raised an E_WARNING level message in this case
      die("can't login");
  }

  echo ftp_pwd($conn_id); // /

  // close the ssl connection
  ftp_close($conn_id);
<?>

===============================================================================
[ See Also ]

 * |ftp_connect| - Opens an FTP connection


vim:ft=help: