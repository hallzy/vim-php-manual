*session_create_id*

(PHP 7 >= 7.1.0)

session_create_id â€” Create new session id

===============================================================================
[ Description ]

  session_create_id ([ string $prefix ] ) : string~

session_create_id() is used to create new session id for the current session.
It returns collision free session id.

If session is not active, collision check is omitted.

Session ID is created according to php.ini settings.

It is important to use the same user ID of your web server for GC task script.
Otherwise, you may have permission problems especially with files save handler.

===============================================================================
[ Parameters ]

{prefix}

  If {prefix} is specified, new session id is prefixed by {prefix}. Not all
  characters are allowed within the session id. Characters in the range a-z A-Z
  0-9 , (comma) and - (minus) are allowed.

===============================================================================
[ Return Values ]

session_create_id() returns new collision free session id for the current
session. If it is used without active session, it omits collision check.

===============================================================================
[ Examples ]

Example #1 session_create_id() example with |session_regenerate_id|

<?php >
  // My session start function support timestamp management
  function my_session_start() {
      session_start();
      // Do not allow to use too old session ID
      if (!empty($_SESSION['deleted_time']) && $_SESSION['deleted_time'] < time()
   - 180) {
          session_destroy();
          session_start();
      }
  }

  // My session regenerate id function
  function my_session_regenerate_id() {
      // Call session_create_id() while session is active to 
      // make sure collision free.
      if (session_status() != PHP_SESSION_ACTIVE) {
          session_start();
      }
      // WARNING: Never use confidential strings for prefix!
      $newid = session_create_id('myprefix-');
      //
   Set deleted timestamp. Session data must not be deleted immediately for reasons.
      $_SESSION['deleted_time'] = time();
      // Finish session
      session_commit();
      // Make sure to accept user defined session ID
      // NOTE: You must enable use_strict_mode for normal operations.
      ini_set('session.use_strict_mode', 0);
      // Set new custom session ID
      session_id($newid);
      // Start with custom session ID
      session_start();
  }

  // Make sure use_strict_mode is enabled.
  // use_strict_mode is mandatory for security reasons.
  ini_set('session.use_strict_mode', 1);
  my_session_start();

  // Session ID must be regenerated when
  //  - User logged in
  //  - User logged out
  //  - Certain period has passed
  my_session_regenerate_id();

  // Write useful codes
<?>

===============================================================================
[ See Also ]

 * |session_regenerate_id| - Update the current session id with a newly
  generated one
 * |session_start| - Start new or resume existing session
 * session.use_strict_mode
 * SessionHandler::create_sid() - Return a new session ID


vim:ft=help: