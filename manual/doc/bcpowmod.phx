*bcpowmod*

(PHP 5, PHP 7)

bcpowmod â€” Raise an arbitrary precision number to another, reduced by a
specified modulus

===============================================================================
[ Description ]

  bcpowmod ( string $base , string $exponent , string $modulus [, int $scale =~
  0 ] ) : string~

Use the fast-exponentiation method to raise {base} to the power {exponent} with
respect to the modulus {modulus}.

===============================================================================
[ Parameters ]

{base}

  The base, as an integral string (i.e. the scale has to be zero).

{exponent}

  The exponent, as an non-negative, integral string (i.e. the scale has to be
  zero).

{modulus}

  The modulus, as an integral string (i.e. the scale has to be zero).

{ scale}

  This optional parameter is used to set the number of digits after the decimal
  place in the result. If omitted, it will default to the scale set globally
  with the |bcscale| function, or fallback to 0 if this has not been set.

===============================================================================
[ Return Values ]

Returns the result as a string, or NULL if {modulus} is 0 or {exponent} is
negative.

===============================================================================
[ Notes ]

  Note:

  Because this method uses the modulus operation, numbers which are not
  positive integers may give unexpected results.

===============================================================================
[ Examples ]

The following two statements are functionally identical. The bcpowmod() version
however, executes in less time and can accept larger parameters.
<?php >
  $a = bcpowmod($x, $y, $mod);

  $b = bcmod(bcpow($x, $y), $mod);

  // $a and $b are equal to each other.

<?>

===============================================================================
[ See Also ]

 * |bcpow| - Raise an arbitrary precision number to another
 * |bcmod| - Get modulus of an arbitrary precision number


vim:ft=help: